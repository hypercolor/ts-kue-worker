{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./src/kue-worker.ts","webpack:///./src/task-router.ts","webpack:///./src/task.ts","webpack:///external \"kue\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport {KueWorker} from './src/kue-worker';\nexport {Task} from './src/task';","import * as express from 'express'\nimport * as kue from 'kue'\nimport { Queue } from 'kue'\nimport { ITaskType } from './task'\nimport { TaskRouter } from './task-router'\n\nconst redisConfig = {\n  redis: process.env.REDIS_URL,\n}\n\nexport class KueWorker {\n  // private static sharedInstance: Worker = new Worker();\n\n  public jobQueue: Queue\n\n  constructor() {\n    // console.log('Setting up Kue...');\n\n    this.jobQueue = kue.createQueue(redisConfig)\n\n    this.jobQueue.watchStuckJobs(1000 * 10)\n\n    // this.jobQueue.on('ready', function(){\n    //   console.info('Queue is ready!');\n    // });\n\n    this.jobQueue.on('error', function(err: Error) {\n      console.error('There was an error in the main queue!')\n      console.error(err)\n      console.error(err.stack)\n    })\n  }\n\n  public static launchBrowser(expressApp: express.Application) {\n    expressApp.use('/kue', kue.app)\n  }\n\n  public registerTask(taskType: ITaskType<any>) {\n    TaskRouter.registerTask(taskType)\n\n    this.jobQueue.process(taskType.name, new taskType({}).maxConcurrent, (job: kue.Job, done: kue.DoneCallback) => {\n      const task = TaskRouter.deserializeTask(job)\n      const start = new Date().getTime()\n\n      if (task) {\n        // console.log('Deserialized task: ' + JSON.stringify(task.serialize()) + ' from job: ' + JSON.stringify(job));\n\n        task\n          .workerRun()\n          .then(result => {\n            if (result.error) {\n              console.log('Job ' + task.constructor.name + ' (' + job.id + ') error: ' + JSON.stringify(result.error))\n              job.remove()\n              done(result.error)\n            } else {\n              console.log(\n                'Processed job ' +\n                  task.constructor.name +\n                  ' (' +\n                  job.id +\n                  ') in ' +\n                  (new Date().getTime() - start) +\n                  ' ms.'\n              )\n              job.remove()\n              done()\n            }\n          })\n          .catch(err => {\n            console.log('Job ' + task.constructor.name + ' (' + job.id + ') error: ', err)\n            job.remove()\n            done(err)\n          })\n      } else {\n        console.log(\"Warning, couldn't deserialize task: \" + JSON.stringify(job))\n        job.remove()\n        done(new Error(\"Couldn't deserialize task.\"))\n      }\n    })\n  }\n}\n","import * as kue from 'kue'\nimport { ITaskType, Task } from './task'\n\nexport class TaskRouter {\n  private static taskTypes: Array<ITaskType<any>> = []\n\n  public static registerTask(taskType: ITaskType<any>) {\n    this.taskTypes.push(taskType)\n  }\n\n  public static deserializeTask(job: kue.Job): Task | null {\n    let task: Task | null = null\n\n    if (job.type) {\n      for (const taskType of this.taskTypes) {\n        if (job.type === taskType.name) {\n          task = new taskType(job.data)\n          break\n        }\n      }\n    }\n\n    return task\n  }\n}\n","import * as kue from 'kue'\nimport { Job } from 'kue'\n\n// export interface ITaskParams {\n//   [key: string]: any;\n// }\n\n// TODO: CONVERT THIS TO CONFIG\nconst redisConfig = {\n  redis: process.env.REDIS_URL,\n}\n\nexport interface ITaskResult {\n  success: boolean\n  error?: any\n  result?: any\n}\n\nexport interface ITaskType<T extends Task> {\n  name: string\n  new (params: any): T\n}\n\nexport abstract class Task {\n  public valid = false\n\n  protected job?: Job\n\n  public abstract get maxConcurrent(): number\n\n  public abstract workerRun(): Promise<ITaskResult>\n\n  protected abstract get params(): any\n\n  public submit() {\n    if (this.valid) {\n      // console.log('Submitting valid task: ' + JSON.stringify(task.serialize()));\n\n      // console.log('Connecting to redis with config: ' + JSON.stringify(redisConfig));\n      const jobQueue = kue.createQueue(redisConfig)\n\n      return new Promise((resolve, reject) => {\n        // this.sharedInstance.jobQueue = kue.createQueue();\n        const job = jobQueue\n          .create(this.constructor.name, this.serialize())\n          .priority('normal')\n          .attempts(1)\n          .backoff(true)\n          .removeOnComplete(false)\n          .delay(0)\n          .save((err: Error) => {\n            if (err) {\n              console.log('Error submitting task: ' + JSON.stringify(err))\n              reject(err)\n            } else {\n              // console.log('Task submitted.');\n              resolve(job)\n            }\n          })\n      })\n    } else {\n      console.log('Warning, tried to submit an invalid task: ' + JSON.stringify(this))\n      return Promise.reject({ code: 500, error: 'Invalid task: ' + JSON.stringify(this) })\n    }\n  }\n\n  public serialize() {\n    const json = this.params\n    json.type = this.constructor.name\n    return json\n  }\n}\n","module.exports = require(\"kue\");"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./src/kue-worker.ts","webpack:///./src/task-launcher.ts","webpack:///./src/task-router.ts","webpack:///./src/task-runner.ts","webpack:///external \"kue\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export {KueWorker, IKueWorkerConfig} from './src/kue-worker';\nexport {TaskRunner} from './src/task-runner';\nexport {TaskLauncher} from './src/task-launcher';","import * as express from 'express'\nimport * as kue from 'kue'\nimport { Queue } from 'kue'\nimport { TaskRouter } from './task-router'\nimport { ITaskType, TaskRunner } from './task-runner'\n\nexport interface IKueWorkerConfig {\n  connection: {\n    redis: string\n  }\n}\n\nexport class KueWorker {\n  public jobQueue: Queue\n\n  constructor(public config: IKueWorkerConfig) {\n    this.jobQueue = kue.createQueue(config.connection)\n\n    this.jobQueue.watchStuckJobs(1000 * 10)\n\n    // this.jobQueue.on('ready', function(){\n    //   console.info('Queue is ready!');\n    // });\n\n    this.jobQueue.on('error', function(err: Error) {\n      console.error('There was an error in the main queue!')\n      console.error(err)\n      console.error(err.stack)\n    })\n  }\n\n  public mountBrowserApp(expressApp: express.Application) {\n    expressApp.use('/kue', kue.app)\n  }\n\n  public registerTask(taskType: ITaskType) {\n    TaskRouter.registerTask(taskType)\n\n    this.jobQueue.process(taskType.constructor.name, taskType.maxConcurrent, (job: kue.Job, done: kue.DoneCallback) => {\n      const start = new Date().getTime()\n\n      let task: TaskRunner\n\n      TaskRouter.deserializeTask(job)\n        .then(t => {\n          task = t\n          return task.run()\n        })\n        .then(result => {\n          if (result.error) {\n            console.log('Job ' + task.constructor.name + ' (' + job.id + ') error: ' + JSON.stringify(result.error))\n            job.remove()\n            done(result.error)\n          } else {\n            console.log(\n              'Processed job ' +\n                task.constructor.name +\n                ' (' +\n                job.id +\n                ') in ' +\n                (new Date().getTime() - start) +\n                ' ms.'\n            )\n            job.remove()\n            done()\n          }\n        })\n        .catch(err => {\n          console.log('Job ' + task.constructor.name + ' (' + job.id + ') error: ', err)\n          job.remove()\n          done(err)\n        })\n    })\n  }\n}\n","import * as kue from 'kue'\nimport { IKueWorkerConfig } from './kue-worker'\nimport { ITaskType } from './task-runner'\n\nexport abstract class TaskLauncher {\n  protected abstract get params(): any\n\n  public abstract get runner(): ITaskType\n\n  public submit(workerConfig: IKueWorkerConfig) {\n    const jobQueue = kue.createQueue(workerConfig.connection)\n\n    return new Promise((resolve, reject) => {\n      // this.sharedInstance.jobQueue = kue.createQueue();\n      const job = jobQueue\n        .create(this.runner.constructor.name, this.params)\n        .priority('normal')\n        .attempts(1)\n        .backoff(true)\n        .removeOnComplete(false)\n        .delay(0)\n        .save((err: Error) => {\n          if (err) {\n            console.log('Error submitting task: ' + JSON.stringify(err))\n            reject(err)\n          } else {\n            // console.log('Task submitted.');\n            resolve(job)\n          }\n        })\n    })\n  }\n}\n","import * as kue from 'kue'\nimport { ITaskType, TaskRunner } from './task-runner'\n\nexport class TaskRouter {\n  private static taskTypes: Array<ITaskType> = []\n\n  public static registerTask(taskType: ITaskType) {\n    this.taskTypes.push(taskType)\n  }\n\n  public static deserializeTask(job: kue.Job): Promise<TaskRunner> {\n    if (job.type) {\n      for (const taskType of this.taskTypes) {\n        if (job.type === taskType.constructor.name) {\n          return taskType.deserialize(job.data)\n        }\n      }\n    }\n\n    return Promise.reject(new Error('Couldnt match task type: ' + job.type))\n  }\n}\n","import { Job } from 'kue'\n\n// export interface ITaskParams {\n//   [key: string]: any;\n// }\n\nexport interface ITaskResult {\n  success: boolean\n  error?: any\n  result?: any\n}\n\nexport interface ITaskType {\n  // name: string\n  maxConcurrent: number\n  deserialize(serializedParams: any): Promise<TaskRunner>\n}\n\nexport abstract class TaskRunner {\n  protected job?: Job\n\n  public abstract run(): Promise<ITaskResult>\n}\n","module.exports = require(\"kue\");"],"sourceRoot":""}